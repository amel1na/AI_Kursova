// <auto-generated />
using System;
using Horoscope.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Horoscope.DAL.Migrations
{
    [DbContext(typeof(HoroscopeContext))]
    partial class HoroscopeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Horoscope.DAL.Entities.Prediction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ZodiakSignId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ZodiakSignId");

                    b.ToTable("Predictions");
                });

            modelBuilder.Entity("Horoscope.DAL.Entities.ZodiakSign", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ZodiakSigns");
                });

            modelBuilder.Entity("Horoscope.DAL.Entities.Prediction", b =>
                {
                    b.HasOne("Horoscope.DAL.Entities.ZodiakSign", "ZodiakSign")
                        .WithMany("Predictions")
                        .HasForeignKey("ZodiakSignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZodiakSign");
                });

            modelBuilder.Entity("Horoscope.DAL.Entities.ZodiakSign", b =>
                {
                    b.Navigation("Predictions");
                });
#pragma warning restore 612, 618
        }
    }
}
